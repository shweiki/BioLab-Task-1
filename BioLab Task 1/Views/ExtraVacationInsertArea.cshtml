@model POCO.ExtraVacation

@using (Ajax.BeginForm("MainExtraVacation", "Administrator", new AjaxOptions { UpdateTargetId = "DisplayAreaMain", OnSuccess = "SuccessInsertExtraVacation", OnFailure = "FailedInsertExtraVacation", OnComplete = "ClearInputFields", OnBegin = "RestTableArea", HttpMethod = "POST", }, new { id = "FormInsertExtraVacation", autocomplete = "off" }))
{
    @Html.TextBoxFor(m => Model.Id, new { type = "hidden", id = "idInput" })

    <div class="row">
        <div class="col-md-5 col-sm-5 col-lg-5">
            <div class="form-group m-1 has-success">
                <label class="control-label font-weight-bold"> Employee Name </label>
                @Html.DropDownListFor(model => model.FK_EmpNo, new SelectList(Model.LEmployee, "Value", "Text", Model.FK_EmpNo), "---Choose---", htmlAttributes: new { @class = "form-control", id = "FK_EmpNo", name = "FK_EmpNo" })
            </div>
        </div>
        <div class="col-md-2 col-sm-2 col-lg-2 mt-4">
            <div class="custom-control custom-radio pr-3 ">
                <input type="radio" id="TypeExtraVacation1" name="TypeExtraVacation" value="1" class="custom-control-input" @(Model.TypeExtraVacation == 1 ? "checked='checked'" : "")>
                <label class="custom-control-label" for="TypeExtraVacation1">Vacation</label>
            </div>
            <div class="custom-control custom-radio pr-3">
                <input type="radio" id="TypeExtraVacation2" name="TypeExtraVacation" value="2" class="custom-control-input" @(Model.TypeExtraVacation == 2 ? "checked='checked'" : "")>
                <label class="custom-control-label" for="TypeExtraVacation2">Sick Vacation</label>
            </div>
        </div>
        <div class="col-md-2 col-sm-2 col-lg-2 mt-4">
            <div class="form-group ">
                <label class="control-label font-weight-bold text-danger">Active</label>
                @Html.TextBoxFor(m => Model.disable, new { type = "hidden", id = "disable", name = "disable" })
                <input type="checkbox" id="ChkDisable" class="js-switch" data-color="#24d2b5" value="@((Model.disable == 0 || Model.disable ==null) ? 0 : 1)" @((Model.disable == 0 || Model.disable == null) ? " checked='checked'" : "") />
            </div>
        </div>
    </div>
    <div class="row">

    </div>

    <div class="row">
        <div class="col-md-3 col-sm-3 col-lg-3">
            <div class="form-group has-success m-1">
                <label class="control-label font-weight-bold">Date FROM </label>
                <input id="DateExtraVaction" name="DateExtraVaction" onfocusout="GetDayValue(1);" data-validation-required-message="You Must To Fill Data" aria-invalid="false" type="date" class="form-control"
                       value="@((Model.DateExtraVaction == null ? "yyyy-MM-dd": ((DateTime)@Model.DateExtraVaction).ToString("yyyy-MM-dd")))" required>
            </div>
        </div>
        <div class="col-md-2 col-lg-2 col-sm-2">
            <div class="form-group">
                <label class="control-label"># Days </label>
                <input type="number" class="form-control" id="NumDays" name="NumDays" value="@Model.NumDays" required>
            </div>
        </div>
        <div class="col-md-2 col-lg-2 col-sm-2">
            <div class="form-group m-1">
                <label class="control-label font-weight-bold">Day</label>
                <input type="text" class="form-control" id="Day" value="" readonly>
            </div>
        </div>
        <div class="col-md-2 col-lg-2 col-sm-2">
            <div class="form-group m-1">
                <label class="control-label font-weight-bold">Current Balance</label>
                <input type="number" class="form-control" id="CurrBalance" name="CurrBalance" value="@Model.CurrBalance" readonly>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-4 col-sm-4 col-lg-4">
            <div class="form-group m-1">
                <label class="control-label font-weight-bold">Note</label>
                <textarea class="form-control" rows="2" id="Note" name="Note" placeholder="You can Write Description  ..." value="@Model.Note">@Model.Note</textarea>
            </div>
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col-md-offset-3 col-md-9">
            <button type="submit" class="btn waves-effect waves-light btn-outline-info"><i class="fa fa-save"></i>@(Model.Id > 0 ? " Update" : " Save")</button>
            <button type="button" class="btn waves-effect waves-light btn-outline-secondary" onclick="ExtraVacationSearch()"><i class="fa fa-search"></i>Search</button>
        </div>
    </div>

    @*<div class="row">
        <div class="col-md-12">
            <h5 class="m-t-30">Single select2</h5>
            <select class="select2 form-control custom-select" style="width: 100%; height:36px;">
                <option>Select</option>
                <optgroup label="Alaskan/Hawaiian Time Zone">
                    <option value="AK">Alaska</option>
                    <option value="HI">Hawaii</option>
                </optgroup>
                <optgroup label="Pacific Time Zone">
                    <option value="CA">California</option>
                    <option value="NV">Nevada</option>
                    <option value="OR">Oregon</option>
                    <option value="WA">Washington</option>
                </optgroup>
                <optgroup label="Mountain Time Zone">
                    <option value="AZ">Arizona</option>
                    <option value="CO">Colorado</option>
                    <option value="ID">Idaho</option>
                    <option value="MT">Montana</option>
                    <option value="NE">Nebraska</option>
                    <option value="NM">New Mexico</option>
                    <option value="ND">North Dakota</option>
                    <option value="UT">Utah</option>
                    <option value="WY">Wyoming</option>
                </optgroup>
                <optgroup label="Central Time Zone">
                    <option value="AL">Alabama</option>
                    <option value="AR">Arkansas</option>
                    <option value="IL">Illinois</option>
                    <option value="IA">Iowa</option>
                    <option value="KS">Kansas</option>
                    <option value="KY">Kentucky</option>
                    <option value="LA">Louisiana</option>
                    <option value="MN">Minnesota</option>
                    <option value="MS">Mississippi</option>
                    <option value="MO">Missouri</option>
                    <option value="OK">Oklahoma</option>
                    <option value="SD">South Dakota</option>
                    <option value="TX">Texas</option>
                    <option value="TN">Tennessee</option>
                    <option value="WI">Wisconsin</option>
                </optgroup>
                <optgroup label="Eastern Time Zone">
                    <option value="CT">Connecticut</option>
                    <option value="DE">Delaware</option>
                    <option value="FL">Florida</option>
                    <option value="GA">Georgia</option>
                    <option value="IN">Indiana</option>
                    <option value="ME">Maine</option>
                    <option value="MD">Maryland</option>
                    <option value="MA">Massachusetts</option>
                    <option value="MI">Michigan</option>
                    <option value="NH">New Hampshire</option>
                    <option value="NJ">New Jersey</option>
                    <option value="NY">New York</option>
                    <option value="NC">North Carolina</option>
                    <option value="OH">Ohio</option>
                    <option value="PA">Pennsylvania</option>
                    <option value="RI">Rhode Island</option>
                    <option value="SC">South Carolina</option>
                    <option value="VT">Vermont</option>
                    <option value="VA">Virginia</option>
                    <option value="WV">West Virginia</option>
                </optgroup>
            </select>
        </div>
    </div>*@
}
<script>
    $(".ajax").select2({
        ajax: {
            url: "https://api.github.com/search/repositories",
            dataType: 'json',
            delay: 250,
            data: function(params) {
                return {
                    q: params.term, // search term
                    page: params.page
                };
            },
            processResults: function(data, params) {
                // parse the results into the format expected by Select2
                // since we are using custom formatting functions we do not need to
                // alter the remote JSON data, except to indicate that infinite
                // scrolling can be used
                params.page = params.page || 1;
                return {
                    results: data.items,
                    pagination: {
                        more: (params.page * 30) < data.total_count
                    }
                };
            },
            cache: true
        },
        escapeMarkup: function(markup) {
            return markup;
        }, // let our custom formatter work
        minimumInputLength: 1,
        //templateResult: formatRepo, // omitted for brevity, see the source of this page
        //templateSelection: formatRepoSelection // omitted for brevity, see the source of this page
    });

    GetDayValue(1);
    var elems = Array.prototype.slice.call(document.querySelectorAll('.js-switch'));
    $('.js-switch').each(function () { new Switchery($(this)[0], $(this).data()); });
    $('#ChkDisable').on('change', function () { if ($(this).is(":checked")) { $('#disable').val(0); } else { $('#disable').val(1); } })

    function SuccessInsertExtraVacation() {
        var id = Number($("#idInput").val());
        if (id > 0) { ShowSuccessMessage('Update Extra Vacation', 'Operation completed successfully'); } else {
            ShowSuccessMessage('Insert Extra Vacation', 'Operation completed successfully');
        }
    }

    function FailedInsertExtraVacation() { ShowErrorMessage('Not Insert Extra Vacation', 'The operation did not complete successfully'); }

    function ClearInputFields() { $("#ChkDisable").prop("checked", false); }

    function RestTableArea() { $("#updateExtraVacationArea").load('@Url.Action("InitExtraVacationDispalyArea", "Administrator")'); }

    function ExtraVacationSearch() {
     $("#DisplayAreaMain").load('@Url.Action("ExtraVacationSearch", "Administrator")', {
            fK_EmpNo: $("#fK_EmpNo").val(), dateExtraVaction: $("#DateExtraVaction").val(), typeExtraVacation: $("#TypeExtraVacation").val(), numDays: $("#NumDays").val(),
            note: $("#Note").val(), disable: $('#ChkDisable').is(":checked") ? 1 : 0
        }, function () { $('html,body').animate({ scrollTop: 0 }, 'slow'); });
    }

    function GetDayValue(Type) {
        var datefrom = $('#DateExtraVaction').val();
        var GetDayVal = GetDay(datefrom, "");
        if (Type == 1) {
            $('#Day').val(GetDayVal.split('_')[1]);
        }
    }
</script>