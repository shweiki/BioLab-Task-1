@model POCO.fixedParameter

<h2>Fixed Parameter</h2>

@using (Ajax.BeginForm("Edit", "Administrator", new AjaxOptions { UpdateTargetId = "DisplayAreaMain", OnSuccess = "SuccessUpdateFixedParameter", OnFailure = "FailedUpdateFixedParameter", OnComplete = "ClearInputFields", OnBegin = "RestTableArea", HttpMethod = "POST", }, new { id = "FormFixedParameter", autocomplete = "off" }))
{
    <div id="response"></div>

    <div class="form-group row">
        <label class="col-2 col-form-label"> @Html.LabelFor(model => model.Hourovertime, "Hour OverTime : ") </label>
        <div class="col-9">
            @Html.EditorFor(model => model.Hourovertime, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Hourovertime, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row">
        <label class="col-2 col-form-label"> @Html.LabelFor(model => model.highestsalary, "Highest Salary : ") </label>
        <div class="col-9">
            @Html.EditorFor(model => model.highestsalary, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.highestsalary, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row">
        <label class="col-2 col-form-label"> @Html.LabelFor(model => model.expmarroed, "Exmption Married : ") </label>
        <div class="col-9">
            @Html.EditorFor(model => model.expmarroed, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.expmarroed, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row">
        <label class="col-2 col-form-label"> @Html.LabelFor(model => model.expsingle, "Exmption Single : ") </label>
        <div class="col-9">
            @Html.EditorFor(model => model.expsingle, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.expsingle, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row">
        <label class="col-2 col-form-label"> @Html.LabelFor(model => model.socialper, "Social % : ") </label>
        <div class="col-9">
            @Html.EditorFor(model => model.socialper, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.socialper, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-actions">
        <button type="submit" class="btn btn-success"> <i class="fa fa-check"></i> Save</button>
        <button type="button" class="btn btn-inverse">Cancel</button>
    </div>

}



